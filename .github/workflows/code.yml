name: CRX OIDC Demo

on:
  workflow_dispatch:  # Allow manual triggering
    inputs:
      custom_image_name:
        description: "Custom Docker image name (e.g., my-image:v1)"
        required: true
        default: "v1.0.0"  # Default value (optional)

env:
  AWS_REGION: "us-east-1"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::851725282145:role/github-snreddyboggu
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2  # Login to Amazon ECR

      - name: Build, tag, and push the custom image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: server  # ECR Repository for Backend
          IMAGE_TAG: ${{ inputs.custom_image_name }}  # Use custom image name
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile2 .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Print success message
        run: echo "Successfully built and pushed $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG to ECR!"
